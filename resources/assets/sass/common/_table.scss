/* Tables */
.table-area {
	
	.filters {
		margin-bottom: 15px;
	}
	
}

.table {
	
	width: 100%;
    max-width: 100%;
	margin-bottom: 15px;
	margin: 0;
	white-space: nowrap;
	overflow-x: scroll;
	
	thead {

		th {
			vertical-align: middle;
			font-weight: 600;
			text-align: center;
			border: none;
			text-transform: uppercase;
			
			i, svg {
				margin-left: 4px;
			}
		}
	}

	&.no-border-top {

		thead > tr > th {
			border-top: none;
		}
	}

	tr {
	
		td {
			padding: 10px 10px;
			vertical-align: middle;
			border-top: 1px solid #eee;
			text-align: center;
			color: #333;

			/*&:not(:last-child) {

				i {
					font-size: 26px;
					line-height: 14px;
				}
			}*/
			
		}

		.btn {
			padding: 7px;
			width: 35px;
			height: 35px;
			display: inline-block;
			font-size: 14px;
			border-radius: 50%;
			font-weight: normal;
			
			i {
				margin: 0;
				
				&.fa-trash {
					color: #fff;
				}
			}
		}
		
    }
    
    &:not(.no-hover) {
        tr {
            &:hover {
                td {
                    background-color: #f7f7f7;
                }
            }
        }
	}
	
	tbody {
		tr.focused {
			td {
				background-color: #f7f7f7;
			}
		}
	}

	&.table-actions tr td:last-child {
	
		padding: 8px 12px;
		white-space: nowrap;
		text-align: center;
		width: 150px;
		
	}

	&.table-ordered {

		tr {

			th[data-column] {
				cursor: pointer;

				i {
					margin-left: 5px;
				}
			}

			th[data-ordered]::after, th[data-ordered]::after {
				font-family: 'FontAwesome';
				display: inline-block;
				content: '\f106';
				margin-left: 5px;
			}

			th[data-ordered="desc"]::after, th[data-ordered="desc"]::after {
				content: '\f107';
			}
			
		}

	}
	
	&.table-striped {
		tr {
			td {
				background-color: #fff;
			}
			td.table-separator {
				background-color: #f7f7f7;
				text-transform: uppercase;
				font-weight: bold;
				text-align: left;
			}

		}
		
	}

	&.table-hover {
		tbody, tfoot {
			tr:hover {
				> * {
					background-color: #f7f7f7 !important;
					
				}

			}
		}
	}
}

/* Grids */
.grid-container {
	
	display: grid;
	overflow: auto;
	height: 600px;
	width: 100%;

	.grid {
		display: flex;
		flex-wrap: nowrap;

		.grid-item {

			padding: 10px 10px;
			text-align: center;
			cursor: pointer;
			border-bottom: 1px solid #ddd;
			height: 40px;

			input {
				border: none;
				background: none;
				padding: 0;
				text-align: center;
				height: auto !important;
				line-height: 16px;
				box-shadow: none;
			}

			&:hover {
				font-weight: 600;
			}

			&.grid-item--header {
				position: sticky;
				position: -webkit-sticky;
				top: 0;
				padding: 12px 10px;
				min-height: 60px;
				display: flex;
				align-items: center;
				justify-content: center;
				font-weight: 600;
				background-color: #fff;
			}
		}

		.grid-col {
			width: 150px;
			min-width: 150px;

			&.grid-col--fixed-left {
				position: sticky;
				left: 0;
				z-index: 9998;
				border-right: 1px solid #ddd;
				background-color: #fff;
				font-weight: 600;
			}
		}

	}
}

.tablesorter-header {
    position: relative;          /* This is needed for the absolute positioning. */
}

.tablesorter-header::before,
.tablesorter-header::after {
    position: absolute;
    right: 0.75em;
    font-family: 'FontAwesome';  /* Use FontAwesome's font so that you can set the content */
    opacity: 0.3;                /* Set opacity to gray out icons by default */
}

.tablesorter-header::before {
    content: '\f0de';            /* Font Awesome's up arrow */
    top: calc(50% - 0.75em);     /* Tricky to calculate the top offset */
}

.tablesorter-header::after {
    content: '\f0dd';            /* Font Awesome's down arrow */
    bottom: calc(50% - 0.75em);
}

.tablesorter-header.tablesorter-headerAsc::before,
.tablesorter-header.tablesorter-headerDesc::after {
    opacity: 1;                  /* When sorting, set full opacity on the direction */
}